/*
 * generated by Xtext
 */
package org.pklose.espl.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.pklose.espl.services.EsplmGrammarAccess;

@SuppressWarnings("all")
public class EsplmSyntacticSequencer extends AbstractSyntacticSequencer {

	protected EsplmGrammarAccess grammarAccess;
	protected AbstractElementAlias match_EntityConfiguration___LeftCurlyBracketKeyword_0_0_or_RightCurlyBracketKeyword_2_1__a;
	protected AbstractElementAlias match_EntityConfiguration___LeftCurlyBracketKeyword_0_0_or_RightCurlyBracketKeyword_2_1__p;
	protected AbstractElementAlias match_EntityConfiguration___RightCurlyBracketKeyword_2_1_LeftCurlyBracketKeyword_0_0_a__p;
	protected AbstractElementAlias match_EntityConfiguration___RightCurlyBracketKeyword_2_1_a_LeftCurlyBracketKeyword_0_0__p;
	protected AbstractElementAlias match_EntityConfiguration___RightCurlyBracketKeyword_2_1_p_LeftCurlyBracketKeyword_0_0_p__p;
	protected AbstractElementAlias match_EnumDeclaration___CommaKeyword_4_0_IDTerminalRuleCall_4_1__a;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (EsplmGrammarAccess) access;
		match_EntityConfiguration___LeftCurlyBracketKeyword_0_0_or_RightCurlyBracketKeyword_2_1__a = new AlternativeAlias(true, true, new TokenAlias(false, false, grammarAccess.getEntityConfigurationAccess().getLeftCurlyBracketKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getEntityConfigurationAccess().getRightCurlyBracketKeyword_2_1()));
		match_EntityConfiguration___LeftCurlyBracketKeyword_0_0_or_RightCurlyBracketKeyword_2_1__p = new AlternativeAlias(true, false, new TokenAlias(false, false, grammarAccess.getEntityConfigurationAccess().getLeftCurlyBracketKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getEntityConfigurationAccess().getRightCurlyBracketKeyword_2_1()));
		match_EntityConfiguration___RightCurlyBracketKeyword_2_1_LeftCurlyBracketKeyword_0_0_a__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getEntityConfigurationAccess().getRightCurlyBracketKeyword_2_1()), new TokenAlias(true, true, grammarAccess.getEntityConfigurationAccess().getLeftCurlyBracketKeyword_0_0()));
		match_EntityConfiguration___RightCurlyBracketKeyword_2_1_a_LeftCurlyBracketKeyword_0_0__p = new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getEntityConfigurationAccess().getRightCurlyBracketKeyword_2_1()), new TokenAlias(false, false, grammarAccess.getEntityConfigurationAccess().getLeftCurlyBracketKeyword_0_0()));
		match_EntityConfiguration___RightCurlyBracketKeyword_2_1_p_LeftCurlyBracketKeyword_0_0_p__p = new GroupAlias(true, false, new TokenAlias(true, false, grammarAccess.getEntityConfigurationAccess().getRightCurlyBracketKeyword_2_1()), new TokenAlias(true, false, grammarAccess.getEntityConfigurationAccess().getLeftCurlyBracketKeyword_0_0()));
		match_EnumDeclaration___CommaKeyword_4_0_IDTerminalRuleCall_4_1__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getEnumDeclarationAccess().getCommaKeyword_4_0()), new TokenAlias(false, false, grammarAccess.getEnumDeclarationAccess().getIDTerminalRuleCall_4_1()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if(ruleCall.getRule() == grammarAccess.getIDRule())
			return getIDToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal ID  		: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	 */
	protected String getIDToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if(match_EntityConfiguration___LeftCurlyBracketKeyword_0_0_or_RightCurlyBracketKeyword_2_1__a.equals(syntax))
				emit_EntityConfiguration___LeftCurlyBracketKeyword_0_0_or_RightCurlyBracketKeyword_2_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_EntityConfiguration___LeftCurlyBracketKeyword_0_0_or_RightCurlyBracketKeyword_2_1__p.equals(syntax))
				emit_EntityConfiguration___LeftCurlyBracketKeyword_0_0_or_RightCurlyBracketKeyword_2_1__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_EntityConfiguration___RightCurlyBracketKeyword_2_1_LeftCurlyBracketKeyword_0_0_a__p.equals(syntax))
				emit_EntityConfiguration___RightCurlyBracketKeyword_2_1_LeftCurlyBracketKeyword_0_0_a__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_EntityConfiguration___RightCurlyBracketKeyword_2_1_a_LeftCurlyBracketKeyword_0_0__p.equals(syntax))
				emit_EntityConfiguration___RightCurlyBracketKeyword_2_1_a_LeftCurlyBracketKeyword_0_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_EntityConfiguration___RightCurlyBracketKeyword_2_1_p_LeftCurlyBracketKeyword_0_0_p__p.equals(syntax))
				emit_EntityConfiguration___RightCurlyBracketKeyword_2_1_p_LeftCurlyBracketKeyword_0_0_p__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_EnumDeclaration___CommaKeyword_4_0_IDTerminalRuleCall_4_1__a.equals(syntax))
				emit_EnumDeclaration___CommaKeyword_4_0_IDTerminalRuleCall_4_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ('{' | '}')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 *     (rule start) (ambiguity) multiple?='mehrfach'
	 *     (rule start) (ambiguity) obligatory?='obligatorisch'
	 *     obligatory?='obligatorisch' (ambiguity) (rule end)
	 *     obligatory?='obligatorisch' (ambiguity) multiple?='mehrfach'
	 *     obligatory?='obligatorisch' (ambiguity) obligatory?='obligatorisch'
	 *     primary?='primär' (ambiguity) (rule end)
	 *     primary?='primär' (ambiguity) multiple?='mehrfach'
	 *     primary?='primär' (ambiguity) obligatory?='obligatorisch'
	 */
	protected void emit_EntityConfiguration___LeftCurlyBracketKeyword_0_0_or_RightCurlyBracketKeyword_2_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' | '}')+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_EntityConfiguration___LeftCurlyBracketKeyword_0_0_or_RightCurlyBracketKeyword_2_1__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('}' '{'*)+
	 *
	 * This ambiguous syntax occurs at:
	 *     multiple?='mehrfach' (ambiguity) (rule end)
	 *     multiple?='mehrfach' (ambiguity) multiple?='mehrfach'
	 *     multiple?='mehrfach' (ambiguity) obligatory?='obligatorisch'
	 */
	protected void emit_EntityConfiguration___RightCurlyBracketKeyword_2_1_LeftCurlyBracketKeyword_0_0_a__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('}'* '{')+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) primary?='primär'
	 *     obligatory?='obligatorisch' (ambiguity) primary?='primär'
	 *     primary?='primär' (ambiguity) primary?='primär'
	 */
	protected void emit_EntityConfiguration___RightCurlyBracketKeyword_2_1_a_LeftCurlyBracketKeyword_0_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('}'+ '{'+)+
	 *
	 * This ambiguous syntax occurs at:
	 *     multiple?='mehrfach' (ambiguity) primary?='primär'
	 */
	protected void emit_EntityConfiguration___RightCurlyBracketKeyword_2_1_p_LeftCurlyBracketKeyword_0_0_p__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (',' ID)*
	 *
	 * This ambiguous syntax occurs at:
	 *     values+=ID (ambiguity) '}' (rule end)
	 */
	protected void emit_EnumDeclaration___CommaKeyword_4_0_IDTerminalRuleCall_4_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
