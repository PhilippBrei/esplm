/**
 * generated by Xtext
 */
package org.pklose.espl.validation;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.pklose.espl.esplm.BREType;
import org.pklose.espl.esplm.BreEntityInput;
import org.pklose.espl.esplm.BreSystemEntityInput;
import org.pklose.espl.esplm.BusinessRule;
import org.pklose.espl.esplm.EsplmPackage;
import org.pklose.espl.validation.AbstractEsplmValidator;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class EsplmValidator extends AbstractEsplmValidator {
  @Check
  public void checkBREInputTypesMatch(final BusinessRule businessRule) {
    BREType _typ = businessRule.getTyp();
    boolean _equals = BREType.BIZ_TO_BIZ.equals(_typ);
    if (_equals) {
      EList<EObject> _systemInputs = businessRule.getSystemInputs();
      final Function1<EObject, Boolean> _function = new Function1<EObject, Boolean>() {
        @Override
        public Boolean apply(final EObject it) {
          return Boolean.valueOf((it instanceof BreEntityInput));
        }
      };
      boolean _forall = IterableExtensions.<EObject>forall(_systemInputs, _function);
      boolean _not = (!_forall);
      if (_not) {
        this.error("F체r BizToBiz sind nur Entit채ten als Input erlaubt", EsplmPackage.Literals.BRE_SYSTEM_ENTITY_INPUT__INPUT_ELEMENT);
      }
    }
    BREType _typ_1 = businessRule.getTyp();
    boolean _equals_1 = BREType.SRC_TO_BIZ.equals(_typ_1);
    if (_equals_1) {
      BREType _typ_2 = businessRule.getTyp();
      boolean _equals_2 = BREType.SRC_TO_BIZ.equals(_typ_2);
      if (_equals_2) {
        EList<EObject> _systemInputs_1 = businessRule.getSystemInputs();
        final Function1<EObject, Boolean> _function_1 = new Function1<EObject, Boolean>() {
          @Override
          public Boolean apply(final EObject it) {
            return Boolean.valueOf((it instanceof BreSystemEntityInput));
          }
        };
        boolean _forall_1 = IterableExtensions.<EObject>forall(_systemInputs_1, _function_1);
        boolean _not_1 = (!_forall_1);
        if (_not_1) {
          this.error("F체r SrcToBiz sind nur Src Entit채ten als Input erlaubt", EsplmPackage.Literals.BRE_SYSTEM_ENTITY_INPUT__INPUT_ELEMENT);
        }
      }
    }
  }
}
